from aiogram import Router, types
from config import administrators
from main import bot
from utils.filters import IsAdmin
from aiogram.fsm.context import FSMContext
from keyboards.admin_keyboards import admin_keyboard
from database.admin_db import get_users_count, get_all_user_ids
import pandas as pd


router = Router()


@router.message(IsAdmin(), lambda message: message.text == "–ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å üíª" or message.text == "/admin")
async def admin_panel(message: types.Message):
    user_id = message.from_user.id
    if user_id in administrators:
        await message.answer("–í—ñ—Ç–∞—é –≤ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ. –û—Å—å –≤–∞—à—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–ø—Ü—ñ—ó.", reply_markup=admin_keyboard())
    
    

@router.message(IsAdmin(), lambda message: message.text == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def statistic_handler(message: types.Message):
    total_users = get_users_count()
    response_message = (
            "<b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê</b>\n\n"
            f"üë• –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {total_users}\n"
            f"‚úîÔ∏è –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —è–∫—ñ –Ω–∞–¥–∞–ª–∏ –¥–∞–Ω—ñ –¥–ª—è –∑–∞–ø–∏—Å—É: {total_users}\n"
        )
    await message.answer(response_message, parse_mode="HTML")
  
        
@router.message(IsAdmin(), lambda message: message.text == "–í–∏–≥—Ä—É–∑–∏—Ç–∏ –ë–î")
async def export_database(message: types.Message):
    response_message = (
            "<b>–í–ò–ì–†–£–ó–ö–ê –ë–ê–ó–ò –î–ê–ù–ò–•</b>\n\n"
            f"–ó–∞—á–µ–∫–∞–π—Ç–µ –ø–æ–∫–∏ –º–∏ —Å—Ñ–æ—Ä–º—É—î–º–æ –µ–∫—Å–µ–ª—å —Ñ–∞–π–ª –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö"
        )
    await message.answer(response_message, parse_mode="HTML")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü—ñ—é
    from database.client_db import get_all_users
    users_data = get_all_users()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ DataFrame
    users_df = pd.DataFrame(users_data, columns=['user_id', 'user_name', 'join_date', 'last_activity'])

    with pd.ExcelWriter('database_export.xlsx', engine='openpyxl') as writer:
        users_df.to_excel(writer, sheet_name='Users', index=False)

    with open('database_export.xlsx', 'rb') as file:
        await bot.send_document(message.chat.id, file, caption="–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")
        
